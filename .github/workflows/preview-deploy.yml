name: PR プレビューデプロイ

on:
  pull_request:
    types: [opened, synchronize, reopened]

# 権限設定
permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: package-lock.jsonの更新
        run: |
          if [ -f "package.json" ]; then
            npm install --package-lock-only --no-audit --no-fund
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              cd $PKG_DIR
              npm install --package-lock-only --no-audit --no-fund
            fi
          fi

      - name: 依存関係のインストール
        run: |
          echo "PR プレビュー用にビルドします"
          if [ -f "package.json" ]; then
            npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          else
            echo "package.jsonが見つかりません。ディレクトリ構造を確認します。"
            find . -name "package.json" -type f

            # package.jsonが見つかった場所に移動
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              echo "package.jsonが見つかりました: $PKG_DIR"
              cd $PKG_DIR
              npm ci --no-audit --no-fund || npm install --no-audit --no-fund
            fi
          fi

      - name: ビルド
        run: |
          if [ -f "package.json" ]; then
            # ルートのpackage.jsonがあるが、おそらくdigeclipディレクトリでビルドする必要がある
            if [ -d "digeclip" ]; then
              cd digeclip
              npm ci --no-audit --no-fund || npm install --no-audit --no-fund
              npm run build
            else
              npm run build
            fi
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              cd $PKG_DIR
              npm run build
            else
              echo "package.jsonが見つからないためビルドを実行できません"
              exit 1
            fi
          fi

      - name: 出力ディレクトリの確認
        run: |
          echo "出力ディレクトリの検索："
          find . -type d -name "out" | cat
          if [ ! -d "./out" ]; then
            if [ -d "./digeclip/out" ]; then
              echo "digeclip/outディレクトリが見つかりました。これを使用します。"
              cp -r ./digeclip/out ./out
            # Next.jsの出力がoutではなく.nextにある場合（静的エクスポートが設定されていない場合）
            elif [ -d "./digeclip/.next" ]; then
              echo "digeclip/.nextディレクトリが見つかりました。このプロジェクトはexport設定がありません。"
              echo "next.config.jsにoutput: 'export'の設定を追加して、静的出力を有効にしてください。"
              # 一時的なソリューションとして、.nextディレクトリをoutとしてコピー
              mkdir -p ./out
              cp -r ./digeclip/.next/static ./out/
              echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0;url=https://github.com/daishiman/DigeClip"></head><body><p>リダイレクト中...</p></body></html>' > ./out/index.html
            fi
          fi

      - name: Cloudflare Pagesへプレビューデプロイ
        id: cloudflare_deployment
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: digeclip
          directory: ./out
          branch: ${{ github.head_ref }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: PRにプレビューURLをコメント
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = '${{ steps.cloudflare_deployment.outputs.url }}';
            const alias = '${{ steps.cloudflare_deployment.outputs.alias }}';
            const previewUrl = alias || url;

            if (previewUrl) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ プレビューデプロイが完了しました！\n\n[プレビューを表示](${previewUrl})`
              });
            }