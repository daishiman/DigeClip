name: 'Preview Deploy'

on:
  pull_request:
    types: [opened, synchronize, reopened]

# 権限設定
permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install root dependencies (package-lock generation)
        run: |
          if [ -f "package.json" ]; then
            npm install --package-lock-only --no-audit --no-fund
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              cd $PKG_DIR
              npm install --package-lock-only --no-audit --no-fund
            fi
          fi

      - name: Prepare build directories and install dependencies
        run: |
          echo "PR プレビュー用にビルドします"
          if [ -f "package.json" ]; then
            npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          else
            echo "package.jsonが見つかりません。ディレクトリ構造を確認します。"
            find . -name "package.json" -type f

            # package.jsonが見つかった場所に移動
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              echo "package.jsonが見つかりました: $PKG_DIR"
              cd $PKG_DIR
              npm ci --no-audit --no-fund || npm install --no-audit --no-fund
            fi
          fi

      - name: Install Tailwind CSS dependencies
        run: |
          if [ -d "digeclip" ]; then
            cd digeclip
            npm install autoprefixer postcss @tailwindcss/postcss --save
          fi

      - name: Build application
        run: |
          if [ -f "package.json" ]; then
            # ルートのpackage.jsonがあるが、おそらくdigeclipディレクトリでビルドする必要がある
            if [ -d "digeclip" ]; then
              cd digeclip
              npm ci --no-audit --no-fund || npm install --no-audit --no-fund
              npm i cross-env --save-dev
              NEXT_PUBLIC_IS_CLOUDFLARE_PAGES=true npm run build:cf || npm run build
            else
              npm i cross-env --save-dev
              NEXT_PUBLIC_IS_CLOUDFLARE_PAGES=true npm run build:cf || npm run build
            fi
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              cd $PKG_DIR
              npm i cross-env --save-dev
              NEXT_PUBLIC_IS_CLOUDFLARE_PAGES=true npm run build:cf || npm run build
            else
              echo "package.jsonが見つからないためビルドを実行できません"
              exit 1
            fi
          fi

      - name: Verify build output and prepare for deployment
        run: |
          # ビルド出力ディレクトリが存在するか確認
          if [ -d "out" ]; then
            echo "ルートディレクトリにoutディレクトリがあります"
          elif [ -d "digeclip/out" ]; then
            echo "digeclip/outディレクトリが見つかりました。ルートにコピーします"
            cp -r digeclip/out ./out
          elif [ -d "digeclip/.next" ]; then
            echo "digeclip/.nextディレクトリが見つかりました。outディレクトリを作成します"
            mkdir -p out
            echo "<meta http-equiv=\"refresh\" content=\"0;url=digeclip/\">" > out/index.html
          else
            echo "警告: ビルド出力ディレクトリが見つかりませんでした"
            find . -type d -name "out" -o -name ".next" | grep -v "node_modules"
            exit 1
          fi

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: digeclip
          directory: out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref || github.ref_name }}
          wranglerVersion: '3'

      - name: "URL の設定"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.payload.pull_request.head.ref.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase();
            const url = `https://${branch}.digeclip.pages.dev`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 プレビューがデプロイされました！ [こちらからアクセス](${url})`
            });