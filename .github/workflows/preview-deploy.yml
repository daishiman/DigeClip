name: プレビューデプロイ

on:
  pull_request:
    types: [opened, synchronize, reopened]

# 権限設定
permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.js のセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'digeclip/package-lock.json'

      - name: 環境設定
        id: env_setup
        run: |
          if [[ "${{ github.base_ref }}" == "dev" ]]; then
            echo "PROJECT_NAME=dev-digeclip" >> $GITHUB_OUTPUT
            echo "ENV_FILE=.env.development" >> $GITHUB_OUTPUT
            echo "環境: 開発環境プレビュー (dev)" >> $GITHUB_STEP_SUMMARY
          else
            echo "PROJECT_NAME=digeclip" >> $GITHUB_OUTPUT
            echo "ENV_FILE=.env.development" >> $GITHUB_OUTPUT
            echo "環境: 本番環境プレビュー (main)" >> $GITHUB_STEP_SUMMARY
          fi

          # PRの情報を取得してブランチ名をエスケープ
          BRANCH="${{ github.head_ref || github.ref_name }}"
          ESCAPED_BRANCH=$(echo $BRANCH | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          echo "PR_BRANCH=$ESCAPED_BRANCH" >> $GITHUB_OUTPUT

      - name: 環境変数ファイルの準備
        run: |
          cp digeclip/${{ steps.env_setup.outputs.ENV_FILE }} digeclip/.env.production.local
          echo "プレビュー用の環境変数を準備しました" >> $GITHUB_STEP_SUMMARY

      - name: 依存関係のインストール
        working-directory: ./digeclip
        run: npm ci

      - name: ビルド
        working-directory: ./digeclip
        env:
          NODE_ENV: development
        run: npm run build

      - name: ビルド出力確認
        id: check_build
        run: |
          if [ -d "digeclip/out" ]; then
            echo "BUILD_DIR=digeclip/out" >> $GITHUB_OUTPUT
            echo "ビルド出力ディレクトリ: digeclip/out" >> $GITHUB_STEP_SUMMARY
          else
            echo "警告: ビルド出力ディレクトリが見つかりません"
            find digeclip -type d -name "out" -o -name ".next" | grep -v "node_modules"
            exit 1
          fi

      - name: Cloudflare Pages へデプロイ
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ steps.env_setup.outputs.PROJECT_NAME }}
          directory: ${{ steps.check_build.outputs.BUILD_DIR }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.env_setup.outputs.PR_BRANCH }}
          wranglerVersion: '3'

      - name: PR にプレビューURL追加
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = '${{ steps.env_setup.outputs.PR_BRANCH }}';
            const projectName = '${{ steps.env_setup.outputs.PROJECT_NAME }}';
            const url = `https://${branch}.${projectName}.pages.dev`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 プレビューがデプロイされました！ [こちらからアクセス](${url})`
            });