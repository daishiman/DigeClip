name: PR プレビューデプロイ

on:
  pull_request:
    types: [opened, synchronize, reopened]

# 権限設定
permissions:
  contents: read
  deployments: write
  pull-requests: write

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 依存関係のインストール
        run: |
          echo "PR プレビュー用にビルドします"
          if [ -f "package.json" ]; then
            npm ci
          else
            echo "package.jsonが見つかりません。ディレクトリ構造を確認します。"
            find . -name "package.json" -type f

            # package.jsonが見つかった場所に移動
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              echo "package.jsonが見つかりました: $PKG_DIR"
              cd $PKG_DIR
              npm ci
            fi
          fi

      - name: ビルド
        run: |
          if [ -f "package.json" ]; then
            npm run build
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              cd $PKG_DIR
              npm run build
            else
              echo "package.jsonが見つからないためビルドを実行できません"
              exit 1
            fi
          fi

      - name: Cloudflare Pagesへプレビューデプロイ
        id: cloudflare_deployment
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: digeclip
          directory: ./out
          deploymentEnvironment: preview
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}

      - name: PRにプレビューURLをコメント
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = '${{ steps.cloudflare_deployment.outputs.url }}';
            if (previewUrl) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `✅ プレビューデプロイが完了しました！\n\n[プレビューを表示](${previewUrl})`
              });
            }