name: テスト実行

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, dev]

# 権限設定
permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 依存関係のインストール
        run: |
          echo "現在のディレクトリ構造を確認"
          ls -la

          if [ -d "digeclip" ]; then
            cd digeclip
            npm ci
          elif [ -f "package.json" ]; then
            npm ci
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              echo "package.jsonが見つかりました: $PKG_DIR"
              cd $PKG_DIR
              npm ci
            else
              echo "package.jsonが見つかりません"
              exit 1
            fi
          fi

      - name: テスト実行
        id: run_test
        run: |
          TEST_SUCCESS=0
          if [ -d "digeclip" ]; then
            cd digeclip
            if grep -q '"test":' package.json; then
              npm test -- --coverage && TEST_SUCCESS=1 || echo "テストスクリプトの実行に失敗しました"
            else
              echo "警告: package.jsonにテストスクリプトが定義されていません"
            fi
          elif [ -f "package.json" ]; then
            if grep -q '"test":' package.json; then
              npm test -- --coverage && TEST_SUCCESS=1 || echo "テストスクリプトの実行に失敗しました"
            else
              echo "警告: package.jsonにテストスクリプトが定義されていません"
            fi
          else
            PKG_DIR=$(find . -name "package.json" -type f | head -1 | xargs dirname)
            if [ ! -z "$PKG_DIR" ]; then
              cd $PKG_DIR
              if grep -q '"test":' package.json; then
                npm test -- --coverage && TEST_SUCCESS=1 || echo "テストスクリプトの実行に失敗しました"
              else
                echo "警告: package.jsonにテストスクリプトが定義されていません"
              fi
            else
              echo "package.jsonが見つからないためテストを実行できません"
              exit 1
            fi
          fi
          echo "test_success=$TEST_SUCCESS" >> $GITHUB_OUTPUT

      - name: カバレッジレポートのアップロード
        if: steps.run_test.outputs.test_success == '1'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./digeclip/coverage
          fail_ci_if_error: false