name: Supabase デプロイ

on:
  push:
    branches:
      - dev
      - main
    paths:
      - 'digeclip/seeds/**'
      - '.github/workflows/supabase-deploy.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  deploy-supabase:
    name: Supabase スキーマデプロイ
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v3

      - name: PostgreSQLクライアントをインストール
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: データベースデプロイ
        run: |
          # 環境変数を設定
          if [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
            # 開発環境の設定
            DB_HOST="${{ secrets.NEXT_PUBLIC_SUPABASE_URL_DEV }}"
            DB_HOST="${DB_HOST#https://}"  # URLからhttps://を削除
            DB_HOST="db.${DB_HOST}"       # dbプレフィックスを追加
            DB_USER="${{ secrets.DEV_DB_USER }}"
            DB_PASSWORD="${{ secrets.DEV_DB_PASSWORD }}"
            APPLY_SEED=true
            echo "環境: 開発環境 (シードデータ適用あり)" >> $GITHUB_STEP_SUMMARY
          elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            # 本番環境の設定
            DB_HOST="${{ secrets.NEXT_PUBLIC_SUPABASE_URL_PROD }}"
            DB_HOST="${DB_HOST#https://}"  # URLからhttps://を削除
            DB_HOST="db.${DB_HOST}"       # dbプレフィックスを追加
            DB_USER="${{ secrets.PROD_DB_USER }}"
            DB_PASSWORD="${{ secrets.PROD_DB_PASSWORD }}"
            APPLY_SEED=false
            echo "環境: 本番環境 (スキーマのみ適用)" >> $GITHUB_STEP_SUMMARY
          else
            echo "サポートされていないブランチです: $GITHUB_REF"
            exit 1
          fi

          # スキーマファイルの存在確認
          if [[ ! -f "digeclip/seeds/dev_schema.sql" ]]; then
            echo "Error: digeclip/seeds/dev_schema.sql ファイルが見つかりません。"
            exit 1
          fi

          # IPv4強制のために接続文字列を調整
          echo "スキーマを適用しています..."
          export PGPASSWORD="$DB_PASSWORD"

          # 接続情報をログに出力（パスワードは除く）
          echo "データベース接続情報: ホスト=$DB_HOST, ユーザー=$DB_USER"

          # ホスト名をIPアドレスに解決（IPv4を強制）
          DB_IP=$(getent ahostsv4 "$DB_HOST" | head -n 1 | awk '{print $1}')
          if [ -z "$DB_IP" ]; then
            echo "警告: IPv4アドレスを解決できません。ホスト名を直接使用します。"
          else
            echo "ホスト名を解決: $DB_HOST → $DB_IP"
            # IPアドレスを使用
            DB_HOST="$DB_IP"
          fi

          # スキーマを適用
          echo "psqlコマンドを実行中..."
          PGOPTIONS="-c client_min_messages=warning" psql -v ON_ERROR_STOP=1 "sslmode=require host=$DB_HOST port=5432 user=$DB_USER dbname=postgres" -f digeclip/seeds/dev_schema.sql
          echo "スキーマを適用しました" >> $GITHUB_STEP_SUMMARY

          # シードデータの適用（開発環境のみ）
          if [[ "$APPLY_SEED" == "true" ]]; then
            if [[ ! -f "digeclip/seeds/dev_seed.sql" ]]; then
              echo "Error: digeclip/seeds/dev_seed.sql ファイルが見つかりません。"
              exit 1
            fi

            echo "シードデータを適用しています..."
            PGOPTIONS="-c client_min_messages=warning" psql -v ON_ERROR_STOP=1 "sslmode=require host=$DB_HOST port=5432 user=$DB_USER dbname=postgres" -f digeclip/seeds/dev_seed.sql
            echo "シードデータを適用しました" >> $GITHUB_STEP_SUMMARY
          fi