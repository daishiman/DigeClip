name: PR自動レビュー

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  accessibility:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 依存関係のインストール
        run: |
          if [ -d "digeclip" ]; then
            cd digeclip
            npm ci
          else
            npm ci
          fi

      - name: アクセシビリティチェック
        run: |
          if [ -d "digeclip" ]; then
            cd digeclip
            if grep -q "axe-core" package.json; then
              echo "アクセシビリティテストを実行します"
              npm run test:a11y || true
            else
              echo "アクセシビリティテストをスキップします"
            fi
          else
            if [ -f "package.json" ] && grep -q "axe-core" package.json; then
              echo "アクセシビリティテストを実行します"
              npm run test:a11y || true
            else
              echo "アクセシビリティテストをスキップします"
            fi
          fi

  size-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Node.jsのセットアップ
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: 依存関係のインストール
        run: |
          if [ -d "digeclip" ]; then
            cd digeclip
            npm ci
          else
            npm ci
          fi

      - name: ビルドサイズチェック
        run: |
          if [ -d "digeclip" ] && [ -f "digeclip/package.json" ]; then
            cd digeclip
            # Next.jsのビルドサイズ分析ツールがあれば実行
            if grep -q "@next/bundle-analyzer" package.json; then
              echo "ビルドサイズ分析を実行します"
              ANALYZE=true npm run build || true
            else
              echo "ビルドサイズ分析ツールが見つからないためスキップします"
            fi
          else
            echo "ビルドサイズチェックをスキップします"
          fi

      - name: PRにコメント
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            // PRに自動レビューコメントを追加
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 自動レビュー結果 🤖

              このPRは自動チェックを完了しました。レビュアーが詳細を確認します。
              `
            });
